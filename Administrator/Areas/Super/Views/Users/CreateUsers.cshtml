@model Administrator.Manager.Helpers.ViewModelUser

@{
    ViewBag.Title = "Crear usuario";
    Layout = "~/Areas/Super/Views/Shared/_Layout.cshtml";
}

    <section class="mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header">
        @{
            Html.RenderAction("SharedHeader", "Shared");
        }

        <main class="mdl-layout__content">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-4 border-bottom">
                <div class="col-md-12">
                    <h3 class="h3">Crear usuario</h3>
                </div>
            </div>

            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="card">

                            @using (Html.BeginForm("CreateUsers", "Users", FormMethod.Post, new { id = "create_super_super" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Id)

                                <div class="card-header">
                                    <div class="row">
                                        <div class="col-md-12 text-right">
                                            <a class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mr-3" href="@Url.Action("ViwerUsers","Catalogs")">Cancelar</a>
                                            <button type="submit" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect">Guardar</button>
                                        </div>
                                        <div class="col-md-12">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="card-body">
                                    <div class="row pb-2">
                                        <div class="col-md-5">
                                            @Html.LabelFor(model => model.Idgroup, htmlAttributes: new { @class = "control-label" })

                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.Idgroup, new SelectList(ViewBag.groupUser, "Id", "Name_group"), "Selecciona el grupo", new { @class = "custom-select" })
                                            </div>

                                            @Html.ValidationMessageFor(model => model.Idgroup, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-5">
                                            @Html.LabelFor(model => model.Typeuser, htmlAttributes: new { @class = "control-label" })

                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.Typeuser, new SelectList(ViewBag.userType, "Value", "Text"), "Selecciona tipo de usuario", new { @class = "custom-select" })
                                            </div>

                                            @Html.ValidationMessageFor(model => model.Typeuser, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-md-2 text-right">
                                            <div class="custom-control custom-switch mt-4">
                                                @Html.CheckBoxFor(model => model.Status, new { @class = "custom-control-input" })
                                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "custom-control-label" })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row mt-4">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Lnamep, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Lnamep, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellido paterno", @maxlength = "30" } })
                                                @Html.ValidationMessageFor(model => model.Lnamep, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Lnamem, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Lnamem, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellido materno", @maxlength = "30" } })
                                                @Html.ValidationMessageFor(model => model.Lnamem, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre de usuario", @maxlength = "50" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mt-4">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Correo de usuario", @maxlength = "80" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @{
                                            if (ViewBag.passWor == "si")
                                            {
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @id = "user_password", @class = "form-control", @placeholder = "Contraseña", @maxlength = "80" } })
                                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </section>

