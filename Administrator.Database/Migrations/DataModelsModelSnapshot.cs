// <auto-generated />
using System;
using Administrator.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Administrator.Database.Migrations
{
    [DbContext(typeof(DataModels))]
    partial class DataModelsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Administrator.Database.Cat_Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Edit_date")
                        .HasColumnName("edit_date");

                    b.Property<int?>("Edit_user")
                        .HasColumnName("edit_user");

                    b.Property<DateTime?>("Generate_date")
                        .HasColumnName("generate_date");

                    b.Property<int?>("Generate_user")
                        .HasColumnName("generate_user");

                    b.Property<int>("Id_main")
                        .HasColumnName("id_main");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("type_user")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("Remove_date")
                        .HasColumnName("remove_date");

                    b.Property<bool?>("Remove_status")
                        .HasColumnName("remove_status");

                    b.Property<int?>("Remove_user")
                        .HasColumnName("remove_user");

                    b.Property<bool>("Status")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Cat_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Usuario con todos los privilegios",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 79, DateTimeKind.Local).AddTicks(9640),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "ROOT",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Usuario de apoyo",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 80, DateTimeKind.Local).AddTicks(380),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "STAFF",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "Usuario de apoyo",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 80, DateTimeKind.Local).AddTicks(400),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "ADMINISTRADOR",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Usuario de apoyo para el administrador",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 80, DateTimeKind.Local).AddTicks(410),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "USUARIO",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "Cliente del administrador",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 80, DateTimeKind.Local).AddTicks(420),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "CLIENTE",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            Description = "Proveedor del administrador",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 80, DateTimeKind.Local).AddTicks(420),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "PROVEEDOR",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            Description = "contador del administrador",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 80, DateTimeKind.Local).AddTicks(430),
                            Generate_user = 1,
                            Id_main = 1,
                            Name = "CONTADOR",
                            Status = true
                        });
                });

            modelBuilder.Entity("Administrator.Database.Tbl_Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnName("browser")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Entry_date")
                        .HasColumnName("entry_date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("fullname")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("IP_User")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("Id_user")
                        .HasColumnName("id_user");

                    b.HasKey("Id");

                    b.HasIndex("Id_user");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("Administrator.Database.Tbl_Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Create_group")
                        .HasColumnName("create_group");

                    b.Property<bool>("Create_permission")
                        .HasColumnName("create_permission");

                    b.Property<bool>("Create_user")
                        .HasColumnName("create_user");

                    b.Property<bool>("Delete_group")
                        .HasColumnName("delete_group");

                    b.Property<bool>("Delete_permission")
                        .HasColumnName("delete_permission");

                    b.Property<bool>("Delete_user")
                        .HasColumnName("delete_user");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Edit_date")
                        .HasColumnName("edit_date");

                    b.Property<int?>("Edit_user")
                        .HasColumnName("edit_user");

                    b.Property<DateTime?>("Generate_date")
                        .HasColumnName("generate_date");

                    b.Property<int?>("Generate_user")
                        .HasColumnName("generate_user");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnName("group")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Id_main")
                        .HasColumnName("id_main");

                    b.Property<bool>("Read_group")
                        .HasColumnName("read_group");

                    b.Property<bool>("Read_permission")
                        .HasColumnName("read_permission");

                    b.Property<bool>("Read_user")
                        .HasColumnName("read_user");

                    b.Property<DateTime?>("Remove_date")
                        .HasColumnName("remove_date");

                    b.Property<bool?>("Remove_status")
                        .HasColumnName("remove_status");

                    b.Property<int?>("Remove_user")
                        .HasColumnName("remove_user");

                    b.Property<bool>("Status")
                        .HasColumnName("status");

                    b.Property<bool>("Update_group")
                        .HasColumnName("update_group");

                    b.Property<bool>("Update_permission")
                        .HasColumnName("update_permission");

                    b.Property<bool>("Update_user")
                        .HasColumnName("update_user");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create_group = true,
                            Create_permission = true,
                            Create_user = true,
                            Delete_group = true,
                            Delete_permission = true,
                            Delete_user = true,
                            Description = "Grupo del Administrador General",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 72, DateTimeKind.Local).AddTicks(9790),
                            Generate_user = 1,
                            Group = "Root",
                            Id_main = 1,
                            Read_group = true,
                            Read_permission = true,
                            Read_user = true,
                            Status = true,
                            Update_group = true,
                            Update_permission = true,
                            Update_user = true
                        },
                        new
                        {
                            Id = 2,
                            Create_group = true,
                            Create_permission = false,
                            Create_user = true,
                            Delete_group = false,
                            Delete_permission = false,
                            Delete_user = false,
                            Description = "Grupo de apoyo para el administrador general",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 77, DateTimeKind.Local).AddTicks(5860),
                            Generate_user = 1,
                            Group = "Staff",
                            Id_main = 1,
                            Read_group = true,
                            Read_permission = false,
                            Read_user = true,
                            Status = true,
                            Update_group = false,
                            Update_permission = false,
                            Update_user = true
                        },
                        new
                        {
                            Id = 3,
                            Create_group = true,
                            Create_permission = true,
                            Create_user = true,
                            Delete_group = true,
                            Delete_permission = true,
                            Delete_user = true,
                            Description = "Grupo del administrador de la cuenta",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 77, DateTimeKind.Local).AddTicks(5880),
                            Generate_user = 1,
                            Group = "Administrador",
                            Id_main = 1,
                            Read_group = true,
                            Read_permission = true,
                            Read_user = true,
                            Status = true,
                            Update_group = true,
                            Update_permission = true,
                            Update_user = true
                        });
                });

            modelBuilder.Entity("Administrator.Database.Tbl_Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Attemp")
                        .HasColumnName("attemp");

                    b.Property<int?>("Cycle")
                        .HasColumnName("cycle");

                    b.Property<DateTime?>("Edit_date")
                        .HasColumnName("edit_date");

                    b.Property<int?>("Edit_user")
                        .HasColumnName("edit_user");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("Generate_date")
                        .HasColumnName("generate_date");

                    b.Property<int?>("Generate_user")
                        .HasColumnName("generate_user");

                    b.Property<int>("Id_group")
                        .HasColumnName("id_group");

                    b.Property<int>("Id_main")
                        .HasColumnName("id_main");

                    b.Property<string>("LnameM")
                        .HasColumnName("lastnamem")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LnameP")
                        .IsRequired()
                        .HasColumnName("lastnamep")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Photo")
                        .HasColumnName("photo")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("Remove_date")
                        .HasColumnName("remove_date");

                    b.Property<bool?>("Remove_status")
                        .HasColumnName("remove_status");

                    b.Property<int?>("Remove_user")
                        .HasColumnName("remove_user");

                    b.Property<bool>("Status")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Id_group");

                    b.HasIndex("Type");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attemp = 0,
                            Cycle = 0,
                            Email = "root@hotmail.es",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 81, DateTimeKind.Local).AddTicks(610),
                            Generate_user = 1,
                            Id_group = 1,
                            Id_main = 1,
                            LnameM = "materno",
                            LnameP = "paterno",
                            Name = "soy root",
                            Password = "6859F96680702A57A951EABE43FEC49964EA51DDE72DF97E43A1FCF6F8B41B89A51CAE8F3162C0CBB3E7FD0850577759AA653E25C4BDFD57264015FA6588360F",
                            Photo = "default.png",
                            Status = true,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Attemp = 0,
                            Cycle = 0,
                            Email = "administrador@hotmail.es",
                            Generate_date = new DateTime(2019, 8, 20, 20, 53, 56, 81, DateTimeKind.Local).AddTicks(1350),
                            Generate_user = 1,
                            Id_group = 3,
                            Id_main = 1,
                            LnameM = "adminmaterno",
                            LnameP = "adminpaterno",
                            Name = "soy admin",
                            Password = "CFBD3E3A8ADC49B9E0061ADE86C84B499012048C903185821F9428DD981C4610B6D660D484A88641BF81B5B840422EA9E3A5DA29C12821EED60B0D281E5F43DB",
                            Photo = "default.png",
                            Status = true,
                            Type = 3
                        });
                });

            modelBuilder.Entity("Administrator.Database.Tbl_Entry", b =>
                {
                    b.HasOne("Administrator.Database.Tbl_Users", "Tbl_Users")
                        .WithMany("Tbl_Entry")
                        .HasForeignKey("Id_user")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Administrator.Database.Tbl_Users", b =>
                {
                    b.HasOne("Administrator.Database.Tbl_Groups", "Tbl_Groups")
                        .WithMany("Tbl_Users")
                        .HasForeignKey("Id_group")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Administrator.Database.Cat_Users", "Cat_Users")
                        .WithMany("Tbl_Users")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
